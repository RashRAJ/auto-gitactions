stages:
  - build
  - deploy

.build-common:
  image: docker:latest
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - docker version
  script:
    - docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
    - docker build --pull -t "1med/pdf-generator:${CI_COMMIT_SHORT_SHA}" .
    - docker tag "1med/pdf-generator:${CI_COMMIT_SHORT_SHA}" 1med/pdf-generator:latest
    - docker push "1med/pdf-generator:${CI_COMMIT_SHORT_SHA}"
    - docker push 1med/pdf-generator:latest
    - docker image save -o pdf-generator.tar "1med/pdf-generator:${CI_COMMIT_SHORT_SHA}"
  artifacts:
    paths:
      - pdf-generator.tar
    expire_in: '1 week'
  tags:
    - privileged

build:manual:
  extends: .build-common
  except:
    - master
  allow_failure: true
  when: manual

build:auto:
  extends: .build-common
  only:
    - master

deploy:manual:
  image: lwolf/kubectl_deployer:latest
  except:
    - master
  stage: deploy
  environment:
    name: staging
  script:
    - kubectl config use-context heliumemr/emr-3-0:1med-agent
    - kubectl -n pdf-generator-stg set image deployment pdf-generator-stg pdf-generator-stg="1med/pdf-generator:${CI_COMMIT_SHORT_SHA}" --record
  tags:
    - k8s
  allow_failure: true
  when: manual

deploy:auto:
  image: lwolf/kubectl_deployer:latest
  only:
    - master
  stage: deploy
  environment:
    name: staging
  script:
    - kubectl config use-context heliumemr/emr-3-0:1med-agent
    - kubectl -n pdf-generator-stg set image deployment pdf-generator-stg pdf-generator-stg="1med/pdf-generator:${CI_COMMIT_SHORT_SHA}" --record
  tags:
    - k8s

