name: heliumemr/helium-android
on:
  push:
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  AUTO_CLOSE_TOKEN: 852:OJYKnvSHM64CViEM4GNPS1eU
jobs:
  build:
    runs-on:
      - self-hosted
      - k8s
    container:
      image: jacekmarchwicki/android:ubuntu-16-04-java7-8
    if: !(github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags') || github.ref == 'refs/heads//^release-.*$/')
    timeout-minutes: 60
    env:
      GRADLE_USER_HOME: "${{ github.workspace }}/.gradle"
      ANDROID_HOME: "${{ github.workspace }}/.android"
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 50
        lfs: true
    - uses: actions/cache@v3.3.1
      with:
        path: |-
          .gradle/
          .android/
        key: helium_v2
    - run: python tools/download.py --token ${AUTO_CLOSE_TOKEN} --key-version agxzfmF1dG8tY2xvc2VyGAsSC1Byb2plY3RLZXlzGICAgOXxjMYKDA
    - run: export VERSION_CODE="$(git rev-list HEAD --count)"
    - run: export COMMIT_ID="$(git rev-parse --short HEAD)$(git status | grep 'clean' --quiet)"
    - run: export TAG_VERSION_NAME="$([[ "${{ github.ref }}" =~ ^([0-9]+\.)*[0-9]+$ ]] && echo "${{ github.ref }}")"
    - run: export VERSION_NAME="$(if [[ "$TAG_VERSION_NAME" ]]; then echo "$TAG_VERSION_NAME-$VERSION_CODE"; else echo "$(git rev-parse --short HEAD)-$VERSION_CODE"; fi)"
    - run: export FOR_CLIENT="$([[ "${{ github.ref }}" =~ ^([0-9]+\.)*[0-9]+$ ]] && echo "TRUE")"
    - run: export FOR_TESTERS="$([[ "${{ github.ref }}" == "master" || "${{ github.ref }}" == "develop" || "${{ github.ref }}" =~ ^release-([0-9]+\.)*[0-9]+$ ]] || [ "${FOR_CLIENT}" ] && echo "TRUE")"
    - run: printf "com.appunite.buildOnCI=true\ncom.appunite.forTesters=${FOR_TESTERS}\ncom.appunite.forClient=${FOR_CLIENT}\norg.gradle.daemon=false\norg.gradle.parallel=true\norg.gradle.caching=true\nversionName=${VERSION_NAME}\nversionCode=${VERSION_CODE}\nautoCloseToken=${AUTO_CLOSE_TOKEN}\nandroid.useAndroidX=true\nandroid.enableJetifier=true\n" > gradle.properties
    - run: echo -e "Building version $VERSION_NAME \nCommit $COMMIT_ID\nRun by ${{ github.actor }}"
    - run: mkdir -p "${ANDROID_HOME}/licenses"
    - run: echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > "${ANDROID_HOME}/licenses/android-sdk-license"
    - run: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "${ANDROID_HOME}/licenses/android-sdk-preview-license"
    - run: echo -e "\nd975f751698a77b662f1254ddbeed3901e976f5a" > "${ANDROID_HOME}/licenses/intel-android-extra-license"
    - run: "./gradlew --stacktrace --profile ktlintCheck build signingReport"
#     # 'artifacts.junit' was not transformed because there is no suitable equivalent in GitHub Actions
    - uses: actions/upload-artifact@v3.1.1
      if: always()
      with:
        name: "${{ github.job }}"
        retention-days: 2
        path: |-
          app/build/reports/
          app/build/outputs/
          app/build/test-results/
#     # 'coverage' was not transformed because there is no suitable equivalent in GitHub Actions.
  testers:
    runs-on:
      - self-hosted
      - k8s
    container:
      image: jacekmarchwicki/android:ubuntu-16-04-java7-8
    if: ((github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads//^release-.*$/')) && !(startsWith(github.ref, 'refs/tags'))
    timeout-minutes: 60
    env:
      GRADLE_USER_HOME: "${{ github.workspace }}/.gradle"
      ANDROID_HOME: "${{ github.workspace }}/.android"
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 50
        lfs: true
    - uses: actions/cache@v3.3.1
      with:
        path: |-
          .gradle/
          .android/
        key: helium_v2
    - run: python tools/download.py --token ${AUTO_CLOSE_TOKEN} --key-version agxzfmF1dG8tY2xvc2VyGAsSC1Byb2plY3RLZXlzGICAgOXxjMYKDA
    - run: export VERSION_CODE="$(git rev-list HEAD --count)"
    - run: export COMMIT_ID="$(git rev-parse --short HEAD)$(git status | grep 'clean' --quiet)"
    - run: export TAG_VERSION_NAME="$([[ "${{ github.ref }}" =~ ^([0-9]+\.)*[0-9]+$ ]] && echo "${{ github.ref }}")"
    - run: export VERSION_NAME="$(if [[ "$TAG_VERSION_NAME" ]]; then echo "$TAG_VERSION_NAME-$VERSION_CODE"; else echo "$(git rev-parse --short HEAD)-$VERSION_CODE"; fi)"
    - run: export FOR_CLIENT="$([[ "${{ github.ref }}" =~ ^([0-9]+\.)*[0-9]+$ ]] && echo "TRUE")"
    - run: export FOR_TESTERS="$([[ "${{ github.ref }}" == "master" || "${{ github.ref }}" == "develop" || "${{ github.ref }}" =~ ^release-([0-9]+\.)*[0-9]+$ ]] || [ "${FOR_CLIENT}" ] && echo "TRUE")"
    - run: printf "com.appunite.buildOnCI=true\ncom.appunite.forTesters=${FOR_TESTERS}\ncom.appunite.forClient=${FOR_CLIENT}\norg.gradle.daemon=false\norg.gradle.parallel=true\norg.gradle.caching=true\nversionName=${VERSION_NAME}\nversionCode=${VERSION_CODE}\nautoCloseToken=${AUTO_CLOSE_TOKEN}\nandroid.useAndroidX=true\nandroid.enableJetifier=true\n" > gradle.properties
    - run: echo -e "Building version $VERSION_NAME \nCommit $COMMIT_ID\nRun by ${{ github.actor }}"
    - run: mkdir -p "${ANDROID_HOME}/licenses"
    - run: echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > "${ANDROID_HOME}/licenses/android-sdk-license"
    - run: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "${ANDROID_HOME}/licenses/android-sdk-preview-license"
    - run: echo -e "\nd975f751698a77b662f1254ddbeed3901e976f5a" > "${ANDROID_HOME}/licenses/intel-android-extra-license"
    - run: "./gradlew --stacktrace --profile ktlintCheck build bundle signingReport appDistributionUploadClientProduction appDistributionUploadClientStaging"
    - uses: actions/upload-artifact@v3.1.1
      if: always()
      with:
        name: "${{ github.job }}"
        retention-days: 2
        path: |-
          app/build/reports/
          app/build/outputs/
  client:
    runs-on:
      - self-hosted
      - k8s
    container:
      image: jacekmarchwicki/android:ubuntu-16-04-java7-8
    if: startsWith(github.ref, 'refs/tags')
    timeout-minutes: 60
    env:
      GRADLE_USER_HOME: "${{ github.workspace }}/.gradle"
      ANDROID_HOME: "${{ github.workspace }}/.android"
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 50
        lfs: true
    - uses: actions/cache@v3.3.1
      with:
        path: |-
          .gradle/
          .android/
        key: helium_v2
    - run: python tools/download.py --token ${AUTO_CLOSE_TOKEN} --key-version agxzfmF1dG8tY2xvc2VyGAsSC1Byb2plY3RLZXlzGICAgOXxjMYKDA
    - run: export VERSION_CODE="$(git rev-list HEAD --count)"
    - run: export COMMIT_ID="$(git rev-parse --short HEAD)$(git status | grep 'clean' --quiet)"
    - run: export TAG_VERSION_NAME="$([[ "${{ github.ref }}" =~ ^([0-9]+\.)*[0-9]+$ ]] && echo "${{ github.ref }}")"
    - run: export VERSION_NAME="$(if [[ "$TAG_VERSION_NAME" ]]; then echo "$TAG_VERSION_NAME-$VERSION_CODE"; else echo "$(git rev-parse --short HEAD)-$VERSION_CODE"; fi)"
    - run: export FOR_CLIENT="$([[ "${{ github.ref }}" =~ ^([0-9]+\.)*[0-9]+$ ]] && echo "TRUE")"
    - run: export FOR_TESTERS="$([[ "${{ github.ref }}" == "master" || "${{ github.ref }}" == "develop" || "${{ github.ref }}" =~ ^release-([0-9]+\.)*[0-9]+$ ]] || [ "${FOR_CLIENT}" ] && echo "TRUE")"
    - run: printf "com.appunite.buildOnCI=true\ncom.appunite.forTesters=${FOR_TESTERS}\ncom.appunite.forClient=${FOR_CLIENT}\norg.gradle.daemon=false\norg.gradle.parallel=true\norg.gradle.caching=true\nversionName=${VERSION_NAME}\nversionCode=${VERSION_CODE}\nautoCloseToken=${AUTO_CLOSE_TOKEN}\nandroid.useAndroidX=true\nandroid.enableJetifier=true\n" > gradle.properties
    - run: echo -e "Building version $VERSION_NAME \nCommit $COMMIT_ID\nRun by ${{ github.actor }}"
    - run: mkdir -p "${ANDROID_HOME}/licenses"
    - run: echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > "${ANDROID_HOME}/licenses/android-sdk-license"
    - run: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "${ANDROID_HOME}/licenses/android-sdk-preview-license"
    - run: echo -e "\nd975f751698a77b662f1254ddbeed3901e976f5a" > "${ANDROID_HOME}/licenses/intel-android-extra-license"
    - run: "./gradlew --stacktrace --profile ktlintCheck build bundle signingReport appDistributionUploadClientProduction appDistributionUploadClientStaging"
    - run: python tools/upload.py --base-url "https://builds.appunite.com/" --token ${AUTO_CLOSE_TOKEN} --build-name "${VERSION_NAME}" --auto-close --final app/build/outputs/ app/build/reports/
    - uses: actions/upload-artifact@v3.1.1
      if: always()
      with:
        name: "${{ github.job }}"
        retention-days: 2
        path: |-
          app/build/reports/
          app/build/outputs/
  instrumentedTest:
    runs-on:
      - self-hosted
      - k8s
    container:
      image: jacekmarchwicki/android:ubuntu-16-04-java7-8
    if: !(startsWith(github.ref, 'refs/tags') || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
    timeout-minutes: 60
    env:
      GRADLE_USER_HOME: "${{ github.workspace }}/.gradle"
      ANDROID_HOME: "${{ github.workspace }}/.android"
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 50
        lfs: true
    - uses: actions/cache@v3.3.1
      with:
        path: |-
          .gradle/
          .android/
        key: helium_v2
    - run: python tools/download.py --token ${AUTO_CLOSE_TOKEN} --key-version agxzfmF1dG8tY2xvc2VyGAsSC1Byb2plY3RLZXlzGICAgOXxjMYKDA
    - run: export VERSION_CODE="$(git rev-list HEAD --count)"
    - run: export COMMIT_ID="$(git rev-parse --short HEAD)$(git status | grep 'clean' --quiet)"
    - run: export TAG_VERSION_NAME="$([[ "${{ github.ref }}" =~ ^([0-9]+\.)*[0-9]+$ ]] && echo "${{ github.ref }}")"
    - run: export VERSION_NAME="$(if [[ "$TAG_VERSION_NAME" ]]; then echo "$TAG_VERSION_NAME-$VERSION_CODE"; else echo "$(git rev-parse --short HEAD)-$VERSION_CODE"; fi)"
    - run: export FOR_CLIENT="$([[ "${{ github.ref }}" =~ ^([0-9]+\.)*[0-9]+$ ]] && echo "TRUE")"
    - run: export FOR_TESTERS="$([[ "${{ github.ref }}" == "master" || "${{ github.ref }}" == "develop" || "${{ github.ref }}" =~ ^release-([0-9]+\.)*[0-9]+$ ]] || [ "${FOR_CLIENT}" ] && echo "TRUE")"
    - run: printf "com.appunite.buildOnCI=true\ncom.appunite.forTesters=${FOR_TESTERS}\ncom.appunite.forClient=${FOR_CLIENT}\norg.gradle.daemon=false\norg.gradle.parallel=true\norg.gradle.caching=true\nversionName=${VERSION_NAME}\nversionCode=${VERSION_CODE}\nautoCloseToken=${AUTO_CLOSE_TOKEN}\nandroid.useAndroidX=true\nandroid.enableJetifier=true\n" > gradle.properties
    - run: echo -e "Building version $VERSION_NAME \nCommit $COMMIT_ID\nRun by ${{ github.actor }}"
    - run: mkdir -p "${ANDROID_HOME}/licenses"
    - run: echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > "${ANDROID_HOME}/licenses/android-sdk-license"
    - run: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "${ANDROID_HOME}/licenses/android-sdk-preview-license"
    - run: echo -e "\nd975f751698a77b662f1254ddbeed3901e976f5a" > "${ANDROID_HOME}/licenses/intel-android-extra-license"
    - run: printf "com.appunite.forClient=false\ncom.appunite.forTesters=false\ncom.appunite.buildOnCI=false\n" >> gradle.properties
    - run: cat gradle.properties
    - run: "./gradlew --stacktrace firebaseTestLabExecuteDevDebugInstrumentation"
