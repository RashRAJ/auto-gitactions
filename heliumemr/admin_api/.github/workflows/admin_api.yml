name: heliumemr/admin_api
on:
  push:
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  DOCKER_PASSWORD: aPVFiO2W2V0T
  DOCKER_USER: onemed
jobs:
  compile:
    runs-on:
      - self-hosted
      - k8s
    container:
      image: elixir:1.12.3
    timeout-minutes: 60
    env:
      POSTGRES_DB_TEST: admin_test
      POSTGRES_DB_DEV: admin_dev
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 50
        lfs: true
    - uses: actions/cache@v3.3.1
      with:
        path: |-
          _build
          deps
        key: admin-main-cache
    - run: mix local.hex --force
    - run: mix local.rebar --force
    - run: mix deps.get
    - run: MIX_ENV=test mix compile --warnings-as-errors
    - run: mix compile --warnings-as-errors
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        retention-days: 7
        path: |-
          _build
          deps
  elixir:
    needs: compile
    runs-on:
      - self-hosted
      - k8s
    container:
      image: elixir:1.12.3
    timeout-minutes: 60
    services:
      postgres:9.6.16:
        image: postgres:9.6.16
    env:
      POSTGRES_DB_TEST: admin_test
      POSTGRES_DB_DEV: admin_dev
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 50
        lfs: true
    - uses: actions/cache@v3.3.1
      with:
        path: |-
          _build
          deps
        key: admin-main-cache
    - uses: actions/download-artifact@v3.0.1
      with:
        name: compile
    - run: mix local.hex --force
    - run: mix local.rebar --force
    - run: mix deps.get
    - run: mix ecto.create
    - run: mix ecto.migrate
    - run: mix check --except dialyzer
  docker-version:
    needs: elixir
    runs-on:
      - self-hosted
      - privileged
    container:
      image: docker:git
    if: github.ref == 'refs/heads/master'
    timeout-minutes: 60
    env:
      POSTGRES_DB_TEST: admin_test
      POSTGRES_DB_DEV: admin_dev
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 50
        lfs: true
    - uses: actions/download-artifact@v3.0.1
    - run: git fetch --prune --unshallow
    - run: VERSION=$(git describe --always)
    - run: docker version
    - run: docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
    - run: docker build --build-arg VERSION=${VERSION} --pull -t "1med/admin:$VERSION" .
    - run: docker push "1med/admin:$VERSION"
